Description: >
  Deployment of relevant roles and services to deploy a grafana lambda service. 
  Requires an S3 Bucket

Parameters:
    
    ApplicationName: 
        Description: This will be used to name the pipeline and build resources
        Type: String
        Default: duffy-codepipline
        AllowedPattern: '[A-Za-z0-9-]+'

    GitHubOAuthToken: 
        Description: Create a token with 'repo' and 'admin:repo_hook' permissions here https://github.com/settings/tokens
        Default: 929374607b3180c44f1380d146fc62f9787b7294
        Type: String

    GitHubUser:
        Description: Enter GitHub username of the repository owner
        Default: Versent
        Type: String

    GitHubRepository:
        Description: Enter the repository name that should be monitored for changes
        Default: base-enc-grafana
        Type: String

    GitHubBranch:
        Description: Enter the GitHub branch to monitored
        Type: String
        Default: master

Resources:

    ArtifactS3Bucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Sub ${ApplicationName}-deploy-${AWS::AccountId}-${AWS::Region}

    CodePipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            Name: !Ref ApplicationName
            RoleArn: !Sub ${CodePipelineRole.Arn}
            ArtifactStore: 
                Type: S3
                Location: !Ref ArtifactS3Bucket
            Stages:
                - Name: Source
                  Actions:
                    - Name: GitHub
                      ActionTypeId:
                        Category: Source
                        Owner: ThirdParty
                        Version: 1
                        Provider: GitHub
                      OutputArtifacts:
                        - Name: SourceOutput
                      Configuration:
                        Owner: !Ref GitHubUser
                        Repo: !Ref GitHubRepository
                        Branch: !Ref GitHubBranch
                        OAuthToken: !Ref GitHubOAuthToken
                - Name: Build
                  Actions:
                    - Name: Build
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref ApplicationName
                      InputArtifacts:
                        - Name: SourceOutput
                      OutputArtifacts:
                        - Name: PackagedTemplate
                #- Name: DeployToStaging
                #  Actions:
                #    - Name: CreateChangeSet
                #      RunOrder: 1
                #      ActionTypeId:
                #        Category: Deploy
                #        Owner: AWS
                #        Provider: CloudFormation
                #        Version: 1
                #      Configuration:
                #        ActionMode: CHANGE_SET_REPLACE
                #        StackName: !Sub ${ApplicationName}-staging
                #        Capabilities: CAPABILITY_IAM
                #        ChangeSetName: !Sub ${ApplicationName}-staging-change-set
                #        TemplatePath: PackagedTemplate::packaged.yml
                #        RoleArn: !Sub ${CodePipelineRole.Arn}
                #      InputArtifacts:
                #        - Name: PackagedTemplate
                #    - Name: DeployChangeSet
                #      RunOrder: 2
                #      ActionTypeId:
                #        Category: Deploy
                #        Owner: AWS
                #        Provider: CloudFormation
                #        Version: 1
                #      Configuration:
                #        ActionMode: CHANGE_SET_EXECUTE
                #        StackName: !Sub ${ApplicationName}-staging
                #        Capabilities: CAPABILITY_IAM
                #        ChangeSetName: !Sub ${ApplicationName}-staging-change-set
                #        OutputFileName: staging-cloudformation-output.json
                #        RoleArn: !Sub ${CodePipelineRole.Arn}
                #      OutputArtifacts:
                #        - Name: StagingOutput
                #    - Name: Verify
                #      RunOrder: 3
                #      ActionTypeId:
                #        Category: Approval
                #        Owner: AWS
                #        Provider: Manual
                #        Version: 1
                    # Configuration:
                    #   NotificationArn: !Ref PipelineTopic
                    #   CustomData: !Sub "Has the change been successfully applied to ${ApplicationName}-staging?"
                - Name: Release
                  Actions:
                    - Name: CreateChangeSet
                      RunOrder: 1
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: 1
                      Configuration:
                        ActionMode: CHANGE_SET_REPLACE
                        StackName: !Sub ${ApplicationName}-listener
                        Capabilities: CAPABILITY_IAM
                        ChangeSetName: !Sub ${ApplicationName}-listener-change-set
                        # TODO: Set parameters via one of following:
                        # ParameterOverrides:
                        #   ApplicationName: !Ref ApplicationName
                        # TemplateConfiguration: PackagedTemplate::configuration.json
                        TemplatePath: PackagedTemplate::packaged.yml
                        RoleArn: !Sub ${DeployRole.Arn}
                      InputArtifacts:
                        - Name: PackagedTemplate
                    #- Name: Approve
                    #  RunOrder: 2
                    #  ActionTypeId:
                    #    Category: Approval
                    #    Owner: AWS
                    #    Provider: Manual
                    #    Version: 1
                    # Configuration:
                    #   NotificationArn: !Ref PipelineTopic
                    #   CustomData: !Sub "Should the change set be applied to ${ApplicationName}-production?"
                    - Name: DeployChangeSet
                      RunOrder: 2
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: 1
                      Configuration:
                        ActionMode: CHANGE_SET_EXECUTE
                        StackName: !Sub ${ApplicationName}-listener
                        Capabilities: CAPABILITY_IAM
                        ChangeSetName: !Sub ${ApplicationName}-listener-change-set
                        OutputFileName: listener-cloudformation-output.json
                        RoleArn: !Sub ${DeployRole.Arn}
                      OutputArtifacts:
                        - Name: ProductionOutput
    CodeBuild:
        Type: AWS::CodeBuild::Project
        Properties:
            Name: !Ref ApplicationName
            Description: !Sub Build project for ${ApplicationName}
            ServiceRole: !Ref CodeBuildRole
            Source:
                Type: CODEPIPELINE
            Environment:
                ComputeType: BUILD_GENERAL1_SMALL
                Image: aws/codebuild/nodejs:8.11.0
                Type: LINUX_CONTAINER
                EnvironmentVariables:
                    - 
                        Name: ARTIFACT_S3_BUCKET
                        Value: !Sub ${ArtifactS3Bucket}
                    - 
                        Name: APPLICATION_NAME
                        Value: !Sub ${ApplicationName}
            Artifacts:
                Name: !Ref ApplicationName
                Type: CODEPIPELINE

    CodePipelineRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                    Principal:
                        Service:
                          - codepipeline.amazonaws.com
                    Action:
                      - sts:AssumeRole
            Path: /
            Policies:
              - PolicyName: !Sub ${ApplicationName}-CodePipelinePolicy
                PolicyDocument:
                  Version: "2012-10-17"
                  Statement:
                    - Action:
                        - s3:GetBucketVersioning
                        - s3:PutObject
                        - s3:GetObject
                        - s3:GetObjectVersion
                      Resource:
                        - !Sub ${ArtifactS3Bucket.Arn}/*
                      Effect: Allow
                    - Action:
                        - cloudformation:CreateStack
                        - cloudformation:DeleteStack
                        - cloudformation:DescribeStacks
                        - cloudformation:UpdateStack
                        - cloudformation:CreateChangeSet
                        - cloudformation:DeleteChangeSet
                        - cloudformation:DescribeChangeSet
                        - cloudformation:ExecuteChangeSet
                        - cloudformation:SetStackPolicy
                        - cloudformation:ValidateTemplate
                        - codedeploy:CreateDeployment
                        - codedeploy:GetApplicationRevision
                        - codedeploy:GetDeployment
                        - codedeploy:GetDeploymentConfig
                        - codedeploy:RegisterApplicationRevision
                        - iam:PassRole
                        - codebuild:BatchGetBuilds
                        - codebuild:StartBuild
                      Resource:
                        - "*"
                      Effect: Allow
    CodeBuildRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Principal:
                    Service:
                      - codebuild.amazonaws.com
                  Action:
                    - sts:AssumeRole
            Policies:
              - PolicyName: !Sub ${ApplicationName}-CodeBuild
                PolicyDocument:
                  Version: "2012-10-17"
                  Statement:
                    - Sid: CloudWatchLogsPolicy
                      Effect: Allow
                      Action:
                        - logs:CreateLogGroup
                        - logs:CreateLogStream
                        - logs:PutLogEvents
                      Resource: "*"
                    - Sid: S3PolicyArtifactStore
                      Effect: Allow
                      Action:
                        - s3:GetObject
                        - s3:GetObjectVersion
                        - s3:PutObject
                      Resource:
                        - !Sub ${ArtifactS3Bucket.Arn}/*
                        
    DeployRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Principal:
                    Service:
                      - cloudformation.amazonaws.com
                  Action:
                    - sts:AssumeRole
            Policies:
              - PolicyName: !Sub ${ApplicationName}-Deploy
                PolicyDocument:
                  Version: "2012-10-17"
                  Statement:
                    - Action:
                        - logs:CreateLogGroup
                        - logs:CreateLogStream
                        - logs:PutLogEvents
                        - s3:GetObject
                        - s3:GetObjectVersion
                        - s3:PutObject
                        - cloudformation:CreateChangeSet
                        - ssm:GetParameters
                        - iam:*
                        - lambda:*
                        - sns:*
                        - events:*
                      Effect: Allow
                      Resource: 
                        - "*"
Outputs:
  DeployRoleArn:
    Value: !GetAtt DeployRole.Arn
    Description: The role ARN to use in the pipeline